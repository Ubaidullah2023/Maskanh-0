import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  SafeAreaView,
  ScrollView,
  Image,
  TouchableOpacity,
  FlatList,
  ImageSourcePropType,
  Dimensions,
  StatusBar,
} from 'react-native';
import { useNavigation } from '@react-navigation/native';
import type { NativeStackNavigationProp } from '@react-navigation/native-stack';
import type { RootStackParamList } from '../navigation/AppNavigator';
import BottomNavigation from '../components/BottomNavigation';
import MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';
import { useTheme } from '../context/ThemeContext';
import { colors, spacing, typography } from '../theme';
import { Ionicons } from '@expo/vector-icons';

type FindServiceScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'FindService'>;

interface Category {
  id: string;
  name: string;
  icon: string;
}

interface Service {
  id: string;
  title: string;
  rating: number;
  image: ImageSourcePropType;
}

const categories: Category[] = [
  { id: '1', name: 'Handyman', icon: 'üîß' },
  { id: '2', name: 'Plumber', icon: 'üö∞' },
  { id: '3', name: 'Electrician', icon: '‚ö°' },
  { id: '4', name: 'Carpenter', icon: 'ü™ö' },
  { id: '5', name: 'Drill', icon: 'üî©' },
  { id: '6', name: 'Heavy-Machinery', icon: 'üöú' },
  { id: '7', name: 'Interior Designer', icon: 'üé®' },
  { id: '8', name: 'Labor', icon: 'üë∑' },
  { id: '9', name: 'Painter', icon: 'üñåÔ∏è' },
  { id: '10', name: 'Solar Panel', icon: '‚òÄÔ∏è' },
  { id: '11', name: 'Welder', icon: '‚öíÔ∏è' },
];

const featuredServices: Service[] = [
  {
    id: '1',
    title: 'Electrician',
    rating: 4.8,
    image: require('../assets/services/electrician.png'),
  },
  {
    id: '2',
    title: 'Carpenter',
    rating: 4.7,
    image: require('../assets/services/carpenter.png'),
  },
  {
    id: '3',
    title: 'Drill',
    rating: 4.7,
    image: require('../assets/services/Drill.png'),
  },
  {
    id: '4',
    title: 'Heavy-Machinery',
    rating: 4.7,
    image: require('../assets/services/Heavy-Machinery.png'),
  },
  {
    id: '5',
    title: 'Interior-Designer',
    rating: 4.7,
    image: require('../assets/services/Interior-Designer.jpeg'),
  },
  {
    id: '6',
    title: 'Labor',
    rating: 4.7,
    image: require('../assets/services/Labor.png'),
  },
  {
    id: '7',
    title: 'Plumber',
    rating: 4.7,
    image: require('../assets/services/Plumber.png'),
  },
  {
    id: '8',
    title: 'Professional-Painter',
    rating: 4.7,
    image: require('../assets/services/Professional-Painter.png'),
  },
  {
    id: '9',
    title: 'Solar-Panel',
    rating: 4.7,
    image: require('../assets/services/Solar-Panel.png'),
  },
  {
    id: '10',
    title: 'Welder',
    rating: 4.7,
    image: require('../assets/services/Welder.png'),
  },
];

const recommendedServices: Service[] = [
  {
    id: '1',
    title: 'Electrician',
    rating: 4.8,
    image: require('../assets/services/electrician.png'),
  },
  {
    id: '2',
    title: 'Carpenter',
    rating: 4.7,
    image: require('../assets/services/carpenter.png'),
  },
  {
    id: '3',
    title: 'Drill',
    rating: 4.7,
    image: require('../assets/services/Drill.png'),
  },
  {
    id: '4',
    title: 'Heavy-Machinery',
    rating: 4.7,
    image: require('../assets/services/Heavy-Machinery.png'),
  },
  {
    id: '5',
    title: 'Interior-Designer',
    rating: 4.7,
    image: require('../assets/services/Interior-Designer.jpeg'),
  },
  {
    id: '6',
    title: 'Labor',
    rating: 4.7,
    image: require('../assets/services/Labor.png'),
  },
  {
    id: '7',
    title: 'Plumber',
    rating: 4.7,
    image: require('../assets/services/Plumber.png'),
  },
  {
    id: '8',
    title: 'Professional-Painter',
    rating: 4.7,
    image: require('../assets/services/Professional-Painter.png'),
  },
  {
    id: '9',
    title: 'Solar-Panel',
    rating: 4.7,
    image: require('../assets/services/Solar-Panel.png'),
  },
  {
    id: '10',
    title: 'Welder',
    rating: 4.7,
    image: require('../assets/services/Welder.png'),
  },
];

const CategoryItem = ({ icon, name }: { icon: string; name: string }) => {
  const { colors, isDarkMode } = useTheme();
  return (
    <TouchableOpacity style={styles.categoryItem}>
      <View style={[styles.categoryIconContainer, { 
        backgroundColor: isDarkMode ? '#333' : '#f0f0f0' 
      }]}>
        <Text style={styles.categoryIcon}>{icon}</Text>
      </View>
      <Text style={[styles.categoryLabel, { 
        color: isDarkMode ? '#fff' : '#000' 
      }]}>{name}</Text>
    </TouchableOpacity>
  );
};

const ServiceCard = ({ image, title, rating }: Service) => {
  const { colors, isDarkMode } = useTheme();
  const navigation = useNavigation<FindServiceScreenNavigationProp>();
  
  return (
    <TouchableOpacity 
      style={[styles.serviceCard, { 
        backgroundColor: isDarkMode ? '#333' : '#fff',
        shadowColor: isDarkMode ? '#000' : '#000',
        shadowOpacity: isDarkMode ? 0.3 : 0.1,
      }]}
      onPress={() => navigation.navigate('Checkout', { title, price: 500 })}
    >
      <Image source={image} style={styles.serviceImage} />
      <View style={styles.serviceInfo}>
        <Text style={[styles.serviceTitle, { 
          color: isDarkMode ? '#fff' : '#000' 
        }]}>{title}</Text>
        <View style={styles.ratingContainer}>
          <Text style={styles.starIcon}>‚≠ê</Text>
          <Text style={[styles.ratingText, { 
            color: isDarkMode ? '#fff' : '#666' 
          }]}>{rating}</Text>
        </View>
      </View>
    </TouchableOpacity>
  );
};

export default function FindServiceScreen() {
  const navigation = useNavigation<FindServiceScreenNavigationProp>();
  const { colors, isDarkMode, toggleTheme } = useTheme();

  const renderCategory = ({ item }: { item: Category }) => (
    <CategoryItem icon={item.icon} name={item.name} />
  );

  const renderService = ({ item }: { item: Service }) => (
    <ServiceCard {...item} />
  );

  return (
    <SafeAreaView style={[styles.container, { backgroundColor: isDarkMode ? '#1a1a1a' : '#fff' }]}>
      <StatusBar barStyle={isDarkMode ? "light-content" : "dark-content"} backgroundColor={isDarkMode ? '#1a1a1a' : '#fff'} />
      <ScrollView style={styles.scrollView}>
        {/* Header */}
        <View style={[styles.header, { 
          borderBottomColor: isDarkMode ? '#333' : '#eee',
          backgroundColor: isDarkMode ? '#1a1a1a' : '#fff' 
        }]}>
          <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
            <Ionicons name="chevron-back" size={24} color={isDarkMode ? '#fff' : '#000'} />
          </TouchableOpacity>
          <Text style={[styles.headerTitle, { color: isDarkMode ? '#fff' : '#000' }]}>Find a Service</Text>
          <View style={styles.headerRight}>
            <TouchableOpacity style={styles.iconButton} onPress={toggleTheme}>
              <Ionicons 
                name={isDarkMode ? "sunny" : "moon"} 
                size={24} 
                color={isDarkMode ? '#fff' : '#000'} 
              />
            </TouchableOpacity>
            <TouchableOpacity style={styles.iconButton}>
              <Ionicons 
                name="menu" 
                size={24} 
                color={isDarkMode ? '#fff' : '#000'} 
              />
            </TouchableOpacity>
          </View>
        </View>

        {/* Categories */}
        <View style={[styles.section, { backgroundColor: isDarkMode ? '#1a1a1a' : '#fff' }]}>
          <Text style={[styles.sectionTitle, { color: isDarkMode ? '#fff' : '#000' }]}>
            Explore by Category
          </Text>
          <FlatList
            data={categories}
            renderItem={renderCategory}
            keyExtractor={(item) => item.id}
            horizontal
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.categoriesList}
          />
        </View>

        {/* Featured Services */}
        <View style={[styles.section, { backgroundColor: isDarkMode ? '#1a1a1a' : '#fff' }]}>
          <Text style={[styles.sectionTitle, { color: isDarkMode ? '#fff' : '#000' }]}>
            Featured Products
          </Text>
          <FlatList
            data={featuredServices}
            renderItem={renderService}
            keyExtractor={(item) => item.id}
            horizontal
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.servicesList}
          />
        </View>

        {/* Recommended Services */}
        <View style={[styles.section, { backgroundColor: isDarkMode ? '#1a1a1a' : '#fff' }]}>
          <Text style={[styles.sectionTitle, { color: isDarkMode ? '#fff' : '#000' }]}>
            Recommended Services
          </Text>
          <View style={styles.recommendedList}>
            {recommendedServices.map((service) => (
              <View key={service.id} style={styles.recommendedItem}>
                <ServiceCard {...service} />
              </View>
            ))}
          </View>
        </View>

        {/* Pakistan Map */}
        <View style={[styles.section, { backgroundColor: colors.card }]}>
          <Text style={[styles.sectionTitle, { color: colors.text }]}>Service Coverage Area</Text>
          <View style={styles.mapContainer}>
            <MapView
              provider={PROVIDER_GOOGLE}
              style={styles.map}
              initialRegion={{
                latitude: 30.3753,
                longitude: 69.3451,
                latitudeDelta: 10,
                longitudeDelta: 10,
              }}
              customMapStyle={isDarkMode ? darkMapStyle : []}
            >
              <Marker
                coordinate={{
                  latitude: 30.3753,
                  longitude: 69.3451,
                }}
                title="Pakistan"
                description="Our service area"
              />
            </MapView>
          </View>
        </View>
      </ScrollView>
      <BottomNavigation />
    </SafeAreaView>
  );
}

const darkMapStyle = [
  {
    elementType: 'geometry',
    stylers: [{ color: '#242f3e' }],
  },
  {
    elementType: 'labels.text.fill',
    stylers: [{ color: '#746855' }],
  },
  {
    elementType: 'labels.text.stroke',
    stylers: [{ color: '#242f3e' }],
  },
  {
    featureType: 'administrative.locality',
    elementType: 'labels.text.fill',
    stylers: [{ color: '#d59563' }],
  },
  {
    featureType: 'poi',
    elementType: 'labels.text.fill',
    stylers: [{ color: '#d59563' }],
  },
  {
    featureType: 'poi.park',
    elementType: 'geometry',
    stylers: [{ color: '#263c3f' }],
  },
  {
    featureType: 'poi.park',
    elementType: 'labels.text.fill',
    stylers: [{ color: '#6b9a76' }],
  },
  {
    featureType: 'road',
    elementType: 'geometry',
    stylers: [{ color: '#38414e' }],
  },
  {
    featureType: 'road',
    elementType: 'geometry.stroke',
    stylers: [{ color: '#212a37' }],
  },
  {
    featureType: 'road',
    elementType: 'labels.text.fill',
    stylers: [{ color: '#9ca5b3' }],
  },
  {
    featureType: 'road.highway',
    elementType: 'geometry',
    stylers: [{ color: '#746855' }],
  },
  {
    featureType: 'road.highway',
    elementType: 'geometry.stroke',
    stylers: [{ color: '#1f2835' }],
  },
  {
    featureType: 'road.highway',
    elementType: 'labels.text.fill',
    stylers: [{ color: '#f3d19c' }],
  },
  {
    featureType: 'transit',
    elementType: 'geometry',
    stylers: [{ color: '#2f3948' }],
  },
  {
    featureType: 'transit.station',
    elementType: 'labels.text.fill',
    stylers: [{ color: '#d59563' }],
  },
  {
    featureType: 'water',
    elementType: 'geometry',
    stylers: [{ color: '#17263c' }],
  },
  {
    featureType: 'water',
    elementType: 'labels.text.fill',
    stylers: [{ color: '#515c6d' }],
  },
  {
    featureType: 'water',
    elementType: 'labels.text.stroke',
    stylers: [{ color: '#17263c' }],
  },
];

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  scrollView: {
    flex: 1,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderBottomWidth: 1,
    backgroundColor: '#fff',
  },
  backButton: {
    padding: 8,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: '600',
  },
  headerRight: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  iconButton: {
    marginLeft: 16,
    padding: 4,
  },
  section: {
    padding: 16,
    backgroundColor: '#fff',
    marginBottom: 8,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 16,
  },
  categoriesList: {
    paddingRight: 16,
  },
  categoryItem: {
    alignItems: 'center',
    marginRight: 24,
    width: 70,
  },
  categoryIconContainer: {
    width: 50,
    height: 50,
    borderRadius: 25,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 8,
    backgroundColor: '#f0f0f0',
  },
  categoryIcon: {
    fontSize: 24,
  },
  categoryLabel: {
    fontSize: 12,
    textAlign: 'center',
  },
  servicesList: {
    paddingRight: 16,
  },
  serviceCard: {
    width: 280,
    borderRadius: 12,
    overflow: 'hidden',
    elevation: 2,
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowRadius: 4,
  },
  serviceImage: {
    width: '100%',
    height: 160,
    resizeMode: 'cover',
  },
  serviceInfo: {
    padding: 12,
  },
  serviceTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 4,
  },
  ratingContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  starIcon: {
    marginRight: 4,
    fontSize: 12,
  },
  ratingText: {
    fontSize: 14,
    color: '#666',
  },
  recommendedList: {
    gap: 16,
  },
  recommendedItem: {
    marginBottom: 16,
  },
  mapContainer: {
    height: 200,
    marginTop: 8,
    borderRadius: 12,
    overflow: 'hidden',
  },
  map: {
    width: '100%',
    height: '100%',
  },
}); 